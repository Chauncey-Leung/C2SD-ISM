%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Filename:       genPsf.m
% Description:    Generate confocal PSF using widefield PSF, which is based
%                 on the Born&Wolf 3D Optical Model and generated by PSF 
%                 generator (https://bigwww.epfl.ch/algorithms/psfgenerator/). 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Full Path of WF PSF
rootPath = 'C:\Users\1\Desktop\3Dsimulation\cube of spherical beads\';
psfName = 'PSF BW';
psfSuffix = '.tif';

psfPath = [rootPath, psfName, psfSuffix];
psf = loadTifStack(psfPath);
% psfInfo = imfinfo(psfPath);
% psfWidth = psfInfo(1).Width;
% psfHeight = psfInfo(1).Height;
% stack_depth = length(psfInfo);
% psf = zeros(psfHeight, psfWidth, stack_depth);
% for depthIdx = 1 : stack_depth
%     psf(:,:, depthIdx) = double(imread(psfPath, depthIdx));
% end


psf_ideal_con = psf .* psf;
psf_ideal_con = psf_ideal_con ./ max(psf_ideal_con(:));
figure;imshow(psf(:,:,64),[])
figure;imshow(psf_ideal_con(:,:,64),[])
for depthIdx = 1 : stack_depth
    imwrite(uint16(psf_ideal_con(:,:,depthIdx) .* 65535), ...
        [rootPath, psfName, '_ideal_con', psfSuffix],WriteMode='append');
end


% Generate detection pinhole
image_width = psfWidth;
image_height = psfHeight;
diameter = 50;
radius = diameter / 2;
circle = zeros(image_height, image_width);
center_x = round(image_width / 2);
center_y = round(image_height / 2);

for y = 1:image_height
    for x = 1:image_width
        distance = sqrt((x - center_x)^2 + (y - center_y)^2);
        if distance <= radius
            circle(y, x) = 1;
        end
    end
end
circle = circle ./ sum(circle(:));
 figure;imshow(circle,[]);

% Pinhole are convolved with 3D PSF layer-by-layer
psf_conv = zeros(size(psf));
for depthIdx = 1 : stack_depth
    psf_conv(:,:, depthIdx) = conv2(psf(:,:, depthIdx), circle, 'same');
end

psf_con1 = psf_conv .* psf;
psf_con2 = psf_conv .* psf_conv;

psf_con1 = psf_con1 ./ max(psf_con1(:));
psf_con2 = psf_con2 ./ max(psf_con2(:));

for depthIdx = 1 : stack_depth
    imwrite(uint16(psf_con1(:,:,depthIdx) .* 65535), ...
        [rootPath, psfName, '_con1.tif', psfSuffix], WriteMode='append');
end
% for depthIdx = 1 : stack_depth
%     imwrite(uint16(psf_con2(:,:,depthIdx) .* 65535), ...
%         'C:\Users\1\Desktop\3Dsimulation\Microtubules\psf_con2.tif',WriteMode='append');
% end
% 
for depthIdx = 1 : stack_depth
    imwrite(uint16(psf_conv(:,:,depthIdx)./max(psf_conv(:)) .* 65535), ...
        [rootPath, psfName, '_ex.tif', psfSuffix],WriteMode='append');
end
